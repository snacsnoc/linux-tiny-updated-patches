Configurable support for console charset translation

--- linux-6.9.1-orig/drivers/tty/vt/consolemap.c	2024-05-17 04:18:09.000000000 -0600
+++ linux-6.9.1/drivers/tty/vt/consolemap.c	2024-05-22 00:22:26.085242652 -0600
@@ -38,6 +38,8 @@
 #include <linux/vt_kern.h>
 #include <linux/string.h>
 
+#ifdef CONFIG_CONSOLE_TRANSLATIONS
+
 static unsigned short translations[][E_TABSZ] = {
   /* 8-bit Latin-1 mapped to Unicode -- trivial mapping */
   [LAT1_MAP] = {
@@ -776,6 +778,81 @@
 }
 EXPORT_SYMBOL(con_copy_unimap);
 
+#else
+
+u16 inverse_translate(struct vc_data *conp, int glyph, int use_unicode)
+{
+	return glyph;
+}
+
+unsigned short *set_translate(int m, struct vc_data *vc)
+{
+	return NULL;
+}
+
+int con_set_trans_old(unsigned char * arg)
+{
+	return 0;
+}
+
+int con_get_trans_old(unsigned char * arg)
+{
+	return -EINVAL;
+}
+
+int con_set_trans_new(ushort * arg)
+{
+	return 0;
+}
+
+int con_get_trans_new(ushort * arg)
+{
+	return -EINVAL;
+}
+
+int con_clear_unimap(struct vc_data *vc, struct unimapinit *ui)
+{
+	return 0;
+}
+
+int con_set_unimap(struct vc_data *vc, ushort ct, struct unipair *list)
+{
+	return 0;
+}
+
+int con_set_default_unimap(struct vc_data *vc)
+{
+	return 0;
+}
+
+int con_copy_unimap(struct vc_data *d, struct vc_data *s)
+{
+	return 0;
+}
+
+int con_get_unimap(struct vc_data *vc, ushort ct, ushort *uct,
+		   struct unipair *list)
+{
+	return -EINVAL;
+}
+
+void con_free_unimap(struct vc_data *vc) { }
+
+int conv_uni_to_pc(struct vc_data *conp, long ucs)
+{
+	return ucs > 0xff ? -1: ucs;
+}
+
+u32 conv_8bit_to_uni(unsigned char c)
+{
+	/* CAUTION: LINUX-TINY - Not sure this is correct */
+	return c;
+}
+
+
+void __init console_map_init(void) { }
+
+#endif
 /*
  *	con_get_unimap		-	get the unicode map
  *
--- linux-6.9.1-orig/drivers/tty/vt/vt.c	2024-05-17 04:18:09.000000000 -0600
+++ linux-6.9.1/drivers/tty/vt/vt.c	2024-05-22 00:32:09.438457612 -0600
@@ -2874,8 +2874,12 @@
 	if (vc->vc_utf && !vc->vc_disp_ctrl)
 		return *c = vc_translate_unicode(vc, *c, rescan);
 
+#ifdef CONFIG_CONSOLE_TRANSLATIONS
 	/* no utf or alternate charset mode */
 	return vc_translate_ascii(vc, *c);
+#else
+	return *c;
+#endif
 }
 
 static inline unsigned char vc_invert_attr(const struct vc_data *vc)
--- linux-6.9.1-orig/init/Kconfig	2024-05-17 04:18:09.000000000 -0600
+++ linux-6.9.1/init/Kconfig	2024-05-22 01:05:37.385702546 -0600
@@ -1936,6 +1942,13 @@
 
 source "kernel/Kconfig.kexec"
 
+config CONSOLE_TRANSLATIONS
+	default y
+	bool "Enable character translations in console" if EXPERT
+	help
+	  This enables support for font mapping and Unicode translation
+          on virtual consoles.
+
 endmenu		# General setup
 
 source "arch/Kconfig"
